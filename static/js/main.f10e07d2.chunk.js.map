{"version":3,"sources":["EightBall.js","App.js","reportWebVitals.js","index.js"],"names":["EightBall","answers","useState","color","setColor","msg","setMsg","shake","setShake","getRandom","Math","floor","random","length","styles","fadeIn","animation","animationName","Radium","keyframes","getAnswer","answer","setTimeout","className","roundedCircle","style","onClick","backgroundColor","Button","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAMMA,EAAY,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClB,EAA0BC,mBAAS,SAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBF,mBAAS,+BAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAGMC,EAAY,kBAAMC,KAAKC,MAAMD,KAAKE,SAAWX,EAAQY,SASrDC,EAAS,CACbC,OAAQ,CACNC,UAAW,OACXC,cAAeC,IAAOC,UAAUJ,SAAQ,YAKtCK,EAAY,SAACnB,GACjB,IAAIoB,EAASZ,IAfbD,GAAS,GACTc,YAAW,kBAAMd,GAAS,KAAQ,KAgBlCc,YAAW,WACTlB,EAASH,EAAQoB,GAAQlB,OACzBG,EAAOL,EAAQoB,GAAQhB,OACtB,MAWL,OACE,cAAC,IAAD,UACE,sBAAKkB,UAAU,YAAYC,eAAa,EAACC,MAAOX,EAAOC,OAAvD,UACI,oBAAIQ,UAAU,kBAAd,8BACA,qBAAKA,UAAW,8BAAgChB,EAAK,QAAa,MAAQmB,QAAS,kBAAMN,EAAUnB,IAAnG,SACE,qBAAKsB,UAAU,mBAAmBE,MAAO,CAAEE,gBAAiBxB,GAA5D,SACGE,MAGL,cAACuB,EAAA,EAAD,CAAQzB,MAAM,OAAOuB,QAff,WACZtB,EAAS,SACTE,EAAO,gCAaD,yBAMVN,EAAU6B,aAAe,CACvB5B,QAAS,CACP,CAAEI,IAAK,iBAAkBF,MAAO,SAChC,CAAEE,IAAK,sBAAuBF,MAAO,SACrC,CAAEE,IAAK,mBAAoBF,MAAO,SAClC,CAAEE,IAAK,oBAAqBF,MAAO,SACnC,CAAEE,IAAK,sBAAuBF,MAAO,SACrC,CAAEE,IAAK,oBAAqBF,MAAO,SACnC,CAAEE,IAAK,eAAgBF,MAAO,SAC9B,CAAEE,IAAK,gBAAiBF,MAAO,SAC/B,CAAEE,IAAK,OAAQF,MAAO,SACtB,CAAEE,IAAK,sBAAuBF,MAAO,aACrC,CAAEE,IAAK,yBAA0BF,MAAO,aACxC,CAAEE,IAAK,mBAAoBF,MAAO,aAClC,CAAEE,IAAK,2BAA4BF,MAAO,aAC1C,CAAEE,IAAK,sBAAuBF,MAAO,aACrC,CAAEE,IAAK,6BAA8BF,MAAO,aAC5C,CAAEE,IAAK,qBAAsBF,MAAO,OACpC,CAAEE,IAAK,kBAAmBF,MAAO,OACjC,CAAEE,IAAK,qBAAsBF,MAAO,OACpC,CAAEE,IAAK,uBAAwBF,MAAO,OACtC,CAAEE,IAAK,iBAAkBF,MAAO,SAIrBH,Q,OC1EA8B,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,OCKSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f10e07d2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from 'reactstrap';\r\nimport { fadeIn } from 'react-animations';\r\nimport Radium, {StyleRoot} from 'radium';\r\nimport './EightBall.css'\r\n\r\nconst EightBall = ({answers}) => {\r\n  const [color, setColor] = useState('black')\r\n  const [msg, setMsg] = useState(\"Think of a Question (click)\")\r\n  const [shake, setShake] = useState(false);\r\n\r\n\r\n  const getRandom = () => Math.floor(Math.random() * answers.length);\r\n\r\n  const shakeEightBall = () => {\r\n    setShake(true)\r\n    setTimeout(() => setShake(false), 1000)\r\n  }\r\n\r\n\r\n\r\n  const styles = {\r\n    fadeIn: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(fadeIn, 'fadeIn')\r\n    }\r\n  }\r\n\r\n  //Get a random answer and set the color and message\r\n  const getAnswer = (answers) => {\r\n    let answer = getRandom()\r\n    shakeEightBall()\r\n    setTimeout(() => {\r\n      setColor(answers[answer].color)\r\n      setMsg(answers[answer].msg)\r\n    }, 1000)\r\n\r\n  }\r\n\r\n  //Set default\r\n  const reset = () => {\r\n    setColor('black')\r\n    setMsg('Think of a Question (click)')\r\n  }\r\n\r\n\r\n  return (\r\n    <StyleRoot>\r\n      <div className=\"container\" roundedCircle style={styles.fadeIn}>\r\n          <h1 className=\"EightBall-title\" >Magic Eight Ball</h1>\r\n          <div className={\"EightBall-section mx-auto \" + (shake ? `shake` : null) } onClick={() => getAnswer(answers)} >\r\n            <div className=\"EightBall-answer\" style={{ backgroundColor: color }}>\r\n              {msg}\r\n            </div>\r\n          </div>\r\n          <Button color=\"info\" onClick={reset}>Reset</Button>\r\n      </div>\r\n    </StyleRoot>\r\n  )\r\n}\r\n\r\nEightBall.defaultProps = {\r\n  answers: [\r\n    { msg: \"It is certain.\", color: \"green\" },\r\n    { msg: \"It is decidedly so.\", color: \"green\" },\r\n    { msg: \"Without a doubt.\", color: \"green\" },\r\n    { msg: \"Yes - definitely.\", color: \"green\" },\r\n    { msg: \"You may rely on it.\", color: \"green\" },\r\n    { msg: \"As I see it, yes.\", color: \"green\" },\r\n    { msg: \"Most likely.\", color: \"green\" },\r\n    { msg: \"Outlook good.\", color: \"green\" },\r\n    { msg: \"Yes.\", color: \"green\" },\r\n    { msg: \"Signs point to yes.\", color: \"goldenrod\" },\r\n    { msg: \"Reply hazy, try again.\", color: \"goldenrod\" },\r\n    { msg: \"Ask again later.\", color: \"goldenrod\" },\r\n    { msg: \"Better not tell you now.\", color: \"goldenrod\" },\r\n    { msg: \"Cannot predict now.\", color: \"goldenrod\" },\r\n    { msg: \"Concentrate and ask again.\", color: \"goldenrod\" },\r\n    { msg: \"Don't count on it.\", color: \"red\" },\r\n    { msg: \"My reply is no.\", color: \"red\" },\r\n    { msg: \"My sources say no.\", color: \"red\" },\r\n    { msg: \"Outlook not so good.\", color: \"red\" },\r\n    { msg: \"Very doubtful.\", color: \"red\" },\r\n  ]\r\n}\r\n\r\nexport default EightBall","// import logo from './logo.svg';\nimport EightBall from './EightBall'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EightBall />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}